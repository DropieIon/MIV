version: '3.3'

services:
  db_orthanc:
    image: mariadb:10.6-focal
    command:
      [
        mysqld,
        --default-authentication-plugin=ed25519,
        --log-bin-trust-function-creators=1,
      ]
    volumes: ["index_orthanc:/var/lib/mariadb:Z"]
    networks:
      - orthanc-db
    environment:
      MARIADB_PASSWORD: orthanc_pass
      MARIADB_USER: orthanc
      MARIADB_DATABASE: orthanc
      MARIADB_ROOT_PASSWORD: foo-root

  db_auth:
    image: mariadb:10.6-focal
    networks:
      - auth-db
    command:
      [
        mysqld,
        --default-authentication-plugin=ed25519,
        --log-bin-trust-function-creators=1,
      ]
    volumes:
      - "index_backend:/var/lib/mariadb:Z"
      - "./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql"
    environment:
    # TODO: get these from env file
      MARIADB_PASSWORD: secure_miv
      MARIADB_USER: miv
      MARIADB_DATABASE: miv
      MARIADB_ROOT_PASSWORD: miv-root

  orthanc:
    image: osimis/orthanc:23.11.0
    depends_on:
      - db_orthanc
    ports: 
      - "8042:8042"
      - "4242:4242"
    networks:
      - orthanc-db
    environment:
      ORTHANC__MYSQL__HOST: db_orthanc
      ORTHANC__MYSQL__USERNAME: orthanc
      ORTHANC__MYSQL__DATABASE: orthanc
      ORTHANC__MYSQL__PASSWORD: orthanc_pass
      # ORTHANC__REGISTERED_USERS: |
      #   {"demo": "demo"}
      ORTHANC__AUTHENTICATION_ENABLED: "false"
      VERBOSE_ENABLED: "true"
      OSIMIS_WEB_VIEWER1_PLUGIN_ENABLED: "false"

  auth:
    build: 
      context: ..
      dockerfile: Infra/dockerfile_backend
    image: backend
    env_file:
      - .backend.env
    networks:
      - kong-net
      - auth-db
    volumes:
      - ../Backend:/app
    command: nodemon /app/microservices/auth.ts
  
  backend:
    build: 
      context: ..
      dockerfile: Infra/dockerfile_backend
    image: backend
    env_file:
      - .backend.env
    # restart: always
    ports:
      - "3000:3000"
    networks:
      - kong-net
      - auth-db
    volumes:
      - ../Backend:/app
    command: nodemon /app/microservices/backend.ts

  # kong-db:
  #   image: postgres:13
  #   networks:
  #     - kong-net
  #   environment:
  #     - "POSTGRES_USER=kong"
  #     - "POSTGRES_DB=kong"
  #     - "POSTGRES_PASSWORD=kongpass"

  # kong-migrations:
  #   image: kong:3.5
  #   environment:
  #     - "KONG_DATABASE=postgres"
  #     - "KONG_PG_HOST=kong-db" 
  #     - "KONG_PG_USER=kong"
  #     - "KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml"
  #     - "KONG_PG_PASSWORD=kongpass" 
  #   command: [kong, migrations, bootstrap]
  #   depends_on:
  #     - kong-db
  #   networks:
  #     - kong-net
  #   volumes:
  #     - ./kong.yaml:/kong/declarative/kong.yml

  kong-gateway:
    image: kong:3.5
    ports:
      - 8000:8000
      # - 8443:8443
      # - 8001:8001
      # - 8444:8444
      # - 8002:8002
      # - 8445:8445
      # - 8003:8003
      # - 8004:8004
    environment:
      - "KONG_DATABASE=off"
      - "KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout" 
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout" 
      - "KONG_PROXY_ERROR_LOG=/dev/stderr" 
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr" 
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001" 
      # - "KONG_ADMIN_GUI_URL=http://localhost:8002"
    # env_file:
    #   - kong_gateway/.kong_secrets.env
    # depends_on:
    #   - kong-migrations
    networks:
      - kong-net
    volumes:
      - ./kong_gateway/kong.yaml:/kong/declarative/kong.yml


volumes:
  storage:
  index_orthanc:
  index_backend:
networks:
  kong-net:
    driver: bridge
  orthanc-db:
    driver: bridge
  auth-db:
    driver: bridge