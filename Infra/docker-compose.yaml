version: '3.9'

services:
  db_orthanc:
    image: mariadb:10.6-focal
    healthcheck:
      test: ["CMD", "mariadb-admin" ,"ping", "-pmiv-root"]
      timeout: 5s
      retries: 10
    command:
      [
        mysqld,
        --default-authentication-plugin=ed25519,
        --log-bin-trust-function-creators=1,
      ]
    volumes: ["index_orthanc:/var/lib/mariadb:Z"]
    networks:
      - orthanc-db
    environment:
      MARIADB_PASSWORD: orthanc_pass
      MARIADB_USER: orthanc
      MARIADB_DATABASE: orthanc
      MARIADB_ROOT_PASSWORD: miv-root

  db_auth:
    image: mariadb:10.6-focal
    healthcheck:
      test: ["CMD", "mariadb-admin" ,"ping", "-pmiv-root"]
      timeout: 5s
      retries: 10
    networks:
      - auth-db
    command:
      [
        mysqld,
        --default-authentication-plugin=ed25519,
        --log-bin-trust-function-creators=1,
      ]
    volumes:
      - "index_backend:/var/lib/mariadb:Z"
      - "./InitDBs/auth.sql:/docker-entrypoint-initdb.d/initdb.sql"
    environment:
    # TODO: get these from env file
      MARIADB_PASSWORD: secure_miv
      MARIADB_USER: miv
      MARIADB_DATABASE: miv
      MARIADB_ROOT_PASSWORD: miv-root

  orthanc:
    build:
      context: ./orthanc
      dockerfile: dockerfile_orthanc
    image: orthanc-with-modules
    depends_on:
      db_orthanc:
          condition: service_healthy
      db_auth:
          condition: service_healthy
    ports: 
    # TODO: change this
      - "8042:8042"
    # TODO: make this go over the gateway
      - "4242:4242"
    networks:
      - orthanc-db
      - kong-net
      - auth-db
    volumes:
      # - ./orthanc/configs/:/etc/orthanc/configs:ro
      - ./orthanc/python-scripts/:/etc/orthanc/python-scripts/
    # command: /etc/orthanc/configs
    env_file:
      - ./orthanc/.orthanc.env
      

  auth:
    build: 
      context: ..
      dockerfile: Infra/dockerfile_backend
    image: backend
    env_file:
      - .backend.env
    networks:
      - kong-net
      - auth-db
    volumes:
      - ../Backend:/app
    command: nodemon /app/microservices/auth.ts
    depends_on:
      db_auth:
        condition: service_healthy
  
  backend:
    build: 
      context: ..
      dockerfile: Infra/dockerfile_backend
    image: backend
    env_file:
      - .backend.env
    networks:
      - kong-net
      - auth-db
    volumes:
      - ../Backend:/app
    command: nodemon /app/microservices/backend.ts
  
  permissions:
    build: 
      context: ..
      dockerfile: Infra/dockerfile_backend
    image: backend
    env_file:
      - .permissions.env
    networks:
      - auth-db
      - kong-net
    volumes:
      - ../Backend:/app
    command: nodemon /app/microservices/permissions.ts
    depends_on:
      db_auth:
        condition: service_healthy

  kong-gateway:
    image: kong:3.5
    ports:
      - 8000:8000
    environment:
      - "KONG_DATABASE=off"
      - "KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout" 
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout" 
      - "KONG_PROXY_ERROR_LOG=/dev/stderr" 
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr" 
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001" 
    networks:
      - kong-net
    volumes:
      - ./kong_gateway/kong.yaml:/kong/declarative/kong.yml


volumes:
  storage:
  index_orthanc:
  index_backend:
networks:
  kong-net:
    driver: bridge
  orthanc-db:
    driver: bridge
  auth-db:
    driver: bridge