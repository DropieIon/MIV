{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nglobal.Buffer = global.Buffer || require('buffer').Buffer;\nvar url = \"http://10.41.41.89:8042\";\nfunction getAllPatients() {\n  return _getAllPatients.apply(this, arguments);\n}\nfunction _getAllPatients() {\n  _getAllPatients = _asyncToGenerator(function* () {\n    var resp = yield axios.get(`${url}/patients/`);\n    return resp.data;\n  });\n  return _getAllPatients.apply(this, arguments);\n}\nfunction getStudies(_x) {\n  return _getStudies.apply(this, arguments);\n}\nfunction _getStudies() {\n  _getStudies = _asyncToGenerator(function* (patient_id) {\n    var resp = yield axios.get(`${url}/patients/${patient_id}`);\n    return resp.data.Studies;\n  });\n  return _getStudies.apply(this, arguments);\n}\nfunction getSeries(_x2) {\n  return _getSeries.apply(this, arguments);\n}\nfunction _getSeries() {\n  _getSeries = _asyncToGenerator(function* (study_id) {\n    var resp = yield axios.get(`${url}/studies/${study_id}`);\n    return resp.data.Series;\n  });\n  return _getSeries.apply(this, arguments);\n}\nfunction getInstances(_x3) {\n  return _getInstances.apply(this, arguments);\n}\nfunction _getInstances() {\n  _getInstances = _asyncToGenerator(function* (serie_id) {\n    var resp = yield axios.get(`${url}/series/${serie_id}`);\n    return resp.data.Instances;\n  });\n  return _getInstances.apply(this, arguments);\n}\nfunction getFrames(_x4) {\n  return _getFrames.apply(this, arguments);\n}\nfunction _getFrames() {\n  _getFrames = _asyncToGenerator(function* (instance_id) {\n    var resp = yield axios.get(`${url}/instances/${instance_id}/frames`);\n    return resp.data;\n  });\n  return _getFrames.apply(this, arguments);\n}\nfunction getJpeg(_x5, _x6) {\n  return _getJpeg.apply(this, arguments);\n}\nfunction _getJpeg() {\n  _getJpeg = _asyncToGenerator(function* (instance_id, frame_nr) {\n    var resp = yield axios.get(`${url}/instances/${instance_id}/frames/${frame_nr}/rendered`, {\n      responseType: 'arraybuffer'\n    });\n    return Buffer.from(resp.data, 'binary').toString('base64');\n  });\n  return _getJpeg.apply(this, arguments);\n}\nfunction getPatient(_x7) {\n  return _getPatient.apply(this, arguments);\n}\nfunction _getPatient() {\n  _getPatient = _asyncToGenerator(function* (patient) {});\n  return _getPatient.apply(this, arguments);\n}\nfunction getViewerImages(_x8) {\n  return _getViewerImages.apply(this, arguments);\n}\nfunction _getViewerImages() {\n  _getViewerImages = _asyncToGenerator(function* (patient_id) {\n    var all_frames = [];\n    var studies = yield getStudies(patient_id);\n    for (var index_studies in studies) {\n      var series_list = yield getSeries(studies[index_studies]);\n      for (var index_series in series_list) {\n        var instances_list = yield getInstances(series_list[index_series]);\n        for (var index_instaces in instances_list) {\n          var instance_id = instances_list[index_instaces];\n          var frames_list = yield getFrames(instance_id);\n          for (var index_frames = 0; index_frames < frames_list.length; index_frames++) {\n            var frame = yield getJpeg(instance_id, frames_list[index_frames]);\n            all_frames.push(frame);\n          }\n        }\n      }\n    }\n    return all_frames;\n  });\n  return _getViewerImages.apply(this, arguments);\n}\nexport { getViewerImages, getAllPatients };","map":{"version":3,"names":["axios","global","Buffer","require","url","getAllPatients","_getAllPatients","apply","arguments","_asyncToGenerator","resp","get","data","getStudies","_x","_getStudies","patient_id","Studies","getSeries","_x2","_getSeries","study_id","Series","getInstances","_x3","_getInstances","serie_id","Instances","getFrames","_x4","_getFrames","instance_id","getJpeg","_x5","_x6","_getJpeg","frame_nr","responseType","from","toString","getPatient","_x7","_getPatient","patient","getViewerImages","_x8","_getViewerImages","all_frames","studies","index_studies","series_list","index_series","instances_list","index_instaces","frames_list","index_frames","length","frame","push"],"sources":["/home/ion/Facultate/Licenta/MIV_expo/Mobile/Components/Data.tsx"],"sourcesContent":["import axios from 'axios';\n\nglobal.Buffer = global.Buffer || require('buffer').Buffer \n\n\nlet url = \"http://10.41.41.89:8042\";\n\ninterface frames_resp {\n    data: Array<number>\n}\n\ninterface series_resp {\n    data: {\n        ID: string,\n    Instances: Array<string>,\n    ParentStudy: string,\n    MainDicomTags: {\n        Modality: string,\n        SeriesDescription: string,\n      StationName: string\n    }\n  }\n}\n\ninterface studies_resp {\n    data: {\n    ID: string,\n    StudyID: string,\n    ParentPatient: string,\n    PatientMainDicomTags: {\n        PatientName: string,\n      PatientSex: string\n    },\n    Series: Array<string>\n  }\n}\n\ninterface patients_resp {\n    data: {\n    ID: string,\n    PatientName: string,\n    MainDicomTags: {\n        PatientID: string,\n      PatientName: string\n    },\n    Studies: Array<string>\n  }\n}\n\nasync function getAllPatients(): Promise<Array<string>> {\n    let resp = await axios.get(`${url}/patients/`);\n    return resp.data;\n}\n\nasync function getStudies(patient_id: string): Promise<Array<string>> {\n    let resp: patients_resp = await axios.get(`${url}/patients/${patient_id}`);\n    return resp.data.Studies;\n}\n\nasync function getSeries(study_id: string): Promise<Array<string>> {\n    let resp: studies_resp = await axios.get(`${url}/studies/${study_id}`);\n    return resp.data.Series;\n}\n\nasync function getInstances(serie_id: string): Promise<Array<string>> {\n  let resp: series_resp = await axios.get(`${url}/series/${serie_id}`);\n  return resp.data.Instances;\n}\n\nasync function getFrames(instance_id: string): Promise<Array<number>> {\n  let resp: frames_resp = await axios.get(`${url}/instances/${instance_id}/frames`);\n  return resp.data;\n}\n\nasync function getJpeg(instance_id: string, frame_nr: number): Promise<string> {\n  let resp = await axios.get(`${url}/instances/${instance_id}/frames/${frame_nr}/rendered`, {\n    responseType: 'arraybuffer',\n  });\n  return Buffer.from(resp.data, 'binary').toString('base64');\n}\n\nasync function getPatient(patient: string) {\n}\n\n\n\nasync function getViewerImages(patient_id: string) {\n  // get Patient -> studies -> series -> instances -> frames -> jpegs\n\n\n  // TODO: change this to something more appropriate\n  let all_frames: Array<string> = [];\n\n  let studies = await getStudies(patient_id);\n  for (const index_studies in studies) {\n    let series_list = await getSeries(studies[index_studies]);\n    for (const index_series in series_list) {\n      let instances_list = await getInstances(series_list[index_series])\n      for (const index_instaces in instances_list) {\n        let instance_id = instances_list[index_instaces];\n        let frames_list = await getFrames(instance_id);\n        for (let index_frames = 0; index_frames < frames_list.length; index_frames++) {\n            let frame = await getJpeg(instance_id, frames_list[index_frames]);\n            all_frames.push(frame);\n        }\n      }\n    }\n  }\n  return all_frames;\n\n}\n\nexport {\n    getViewerImages,\n    getAllPatients\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}